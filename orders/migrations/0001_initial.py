# Generated by Django 5.0.2 on 2025-06-24 01:59

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('customers', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='OrderStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('new', 'Новая'), ('in_progress', 'В работе'), ('completed', 'Выполнена'), ('rejected', 'Отклонена')], max_length=20, unique=True)),
                ('description', models.TextField(blank=True)),
                ('color', models.CharField(default='#007bff', help_text='Цвет в формате #RRGGBB', max_length=7)),
            ],
            options={
                'verbose_name': 'Статус заявки',
                'verbose_name_plural': 'Статусы заявок',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=20, unique=True, verbose_name='Номер заявки')),
                ('title', models.CharField(max_length=200, verbose_name='Заголовок заявки')),
                ('description', models.TextField(verbose_name='Описание')),
                ('priority', models.CharField(choices=[('low', 'Низкий'), ('medium', 'Средний'), ('high', 'Высокий'), ('urgent', 'Срочный')], default='medium', max_length=10, verbose_name='Приоритет')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('deadline', models.DateTimeField(blank=True, null=True, verbose_name='Срок выполнения')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='Дата выполнения')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='customers.customer', verbose_name='Клиент')),
                ('manager', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Ответственный менеджер')),
                ('status', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='orders.orderstatus', verbose_name='Статус')),
            ],
            options={
                'verbose_name': 'Заявка',
                'verbose_name_plural': 'Заявки',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='OrderComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(verbose_name='Текст комментария')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Автор')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='orders.order', verbose_name='Заявка')),
            ],
            options={
                'verbose_name': 'Комментарий к заявке',
                'verbose_name_plural': 'Комментарии к заявкам',
                'ordering': ['-created_at'],
            },
        ),
    ]

    def create_statuses(apps, schema_editor):
        OrderStatus = apps.get_model('orders', 'OrderStatus')
        statuses = [
            ('new', 'Новая', '#007bff'),
            ('in_progress', 'В работе', '#ffc107'),
            ('completed', 'Выполнена', '#28a745'),
            ('rejected', 'Отклонена', '#dc3545'),
        ]
        for name, desc, color in statuses:
            OrderStatus.objects.get_or_create(name=name, defaults={'description': desc, 'color': color})

    operations += [
        migrations.RunPython(create_statuses)
    ]
